#!/usr/bin/bash

# Could be symlinked to ~/bin/tailscale

set -e -o pipefail -x

this_bin="$(readlink -f "$0")"
while read -r tailscale_bin; do
    tailscale_bin="$(readlink -f "$tailscale_bin")"
    if [[ "$tailscale_bin" != "$this_bin" ]]; then
        break
    fi
done < <(which -a tailscale)

if [[ -z "$tailscale_bin" ]]; then
    echo "tailscale binary not found!" >&2
    exit 1
fi
# echo "Found tailscale binary: $tailscale_bin" >&2

if [[ $# -eq 0 || " $* " =~ " --help " || " $* " =~ " -h " || $1 =~ configure|licenses|version ]]; then
    exec "$tailscale_bin" "$@"
fi

socket_dirs=()
if [[ -d /var/run/tailscale-nm ]]; then
    socket_dirs+=(/var/run/tailscale-nm)
fi
if [[ -d /var/run/tailscale ]]; then
    socket_dirs+=(/var/run/tailscale)
fi

if [[ ${#socket_dirs[@]} -eq 0 ]]; then
    echo "No connections found!" >&2
    exit 1
fi

declare -A connections

while read -r f; do
    if [[ "$f" =~ /tailscaled.sock$ ]]; then
        connections["<default>"]="$f"
    else
        uuid="${f#*.}"
        uuid="${uuid%.*}"
        name=$(nmcli -t -g connection.id connection show "$uuid")
        connections["$name ($uuid)"]="$f"
    fi
done < <(find "${socket_dirs[@]}" -type s)

if [[ ${#connections[@]} -eq 0 ]]; then
    echo "No connections found!" >&2
    exit 1
elif [[ ${#connections[@]} -eq 1 ]]; then
    name="${!connections[*]}"
else
    echo "Multiple connections found! Select one:" >&2
    select name in "${!connections[@]}"; do
        break
    done
fi
echo "Using connection: $name" >&2
socket="${connections[$name]}"
if [[ "$UID" -ne 0 ]]; then
    exec sudo "$tailscale_bin" --socket="$socket" "$@"
else
    exec "$tailscale_bin" --socket="$socket" "$@"
fi
